<?php

/**
 * Skeleton subclass for performing query and update operations on the 'botconfig_relations' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 01/25/13 01:40:55
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class botconfigRelationsPeer extends BasebotconfigRelationsPeer {

  public static function checkRelation($parentId, $botconfigId) {

    $c = new Criteria();
    $c->add(self::PARENT_BOTCONFIG_ID, $parentId);
    $c->add(self::BOTCONFIG_ID, $botconfigId);

    return self::docount($c);
  }

  public static function getByParentIdAndConfigId($parentId, $botconfigId) {

    $c = new Criteria();
    $c->add(self::PARENT_BOTCONFIG_ID, $parentId);
    $c->add(self::BOTCONFIG_ID, $botconfigId);

    return self::doSelectOne($c);
  }

  public static function getByParentId($parentId) {
    $c = new Criteria();
    $c->add(self::PARENT_BOTCONFIG_ID, $parentId);

    return self::doSelect($c);
  }

  public static function getIniWithRelations($config, $relationsIds) {

    $relationsConfigs = botconfigRelationsPeer::getByParentId($config->getId());
    $relationConfigsSections = array();

    foreach ($relationsConfigs as $relationsConfig) {
      $relationConfig = $relationsConfig->getbotconfigRelatedByBotconfigId();
      if (!array_search($relationConfig->getId(), $relationsIds)) {
        $relationsIds[] = $relationConfig->getId();
        $configSections = parse_botconfig($relationConfig->getBody(), true);
        $relationConfigsSections = array_merge($relationConfigsSections, $configSections);
        $relationConfigsSections = array_merge(self::getIniWithRelations($relationConfig, $relationsIds), $relationConfigsSections);
      }
    }

    return $relationConfigsSections;
  }

}

// botconfigRelationsPeer
